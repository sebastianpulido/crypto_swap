{"ast":null,"code":"var _jsxFileName = \"/Users/yeknomhtooms/Desktop/trae_blockchain_app1/frontend/src/components/SwapInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport AtomicSwapContract from '../contracts/AtomicSwap.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SwapInterface = ({\n  signer,\n  provider,\n  account,\n  onSwapCreated\n}) => {\n  _s();\n  const [swapDirection, setSwapDirection] = useState('eth-to-btc');\n  const [ethAmount, setEthAmount] = useState('');\n  const [btcAmount, setBtcAmount] = useState('');\n  const [btcAddress, setBtcAddress] = useState('');\n  const [ethAddress, setEthAddress] = useState('');\n  const [timelock, setTimelock] = useState(24); // hours\n  const [loading, setLoading] = useState(false);\n  const [swapResult, setSwapResult] = useState(null);\n  const generateSwapId = () => {\n    return ethers.hexlify(ethers.randomBytes(32));\n  };\n  const generateSecret = async () => {\n    try {\n      // Use direct URL to backend\n      const response = await fetch('http://localhost:3001/api/generate-secret', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error generating secret:', error);\n      throw error;\n    }\n  };\n  const initiateEthToBtcSwap = async () => {\n    try {\n      setLoading(true);\n\n      // Generate secret and swap ID\n      const {\n        secret,\n        hashedSecret\n      } = await generateSecret();\n      const swapId = generateSwapId();\n      const timelockTimestamp = Math.floor(Date.now() / 1000) + timelock * 3600;\n\n      // Initialize contract\n      const contract = new ethers.Contract(AtomicSwapContract.address, AtomicSwapContract.abi, signer);\n\n      // Initiate swap on Ethereum\n      const tx = await contract.initiateSwap(swapId, account,\n      // participant (will be updated with actual participant)\n      ethers.ZeroAddress,\n      // ETH\n      ethers.parseEther(ethAmount), hashedSecret, timelockTimestamp, {\n        value: ethers.parseEther(ethAmount)\n      });\n      await tx.wait();\n\n      // Register swap with backend - use direct URL\n      const response = await fetch('http://localhost:3001/api/swap/eth-to-btc/initiate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          swapId,\n          ethAmount: ethers.parseEther(ethAmount).toString(),\n          btcAmount,\n          btcAddress,\n          hashedSecret,\n          timelock: timelockTimestamp\n        })\n      });\n      const result = await response.json();\n      setSwapResult({\n        swapId,\n        secret,\n        hashedSecret,\n        txHash: tx.hash,\n        message: 'Ethereum to Bitcoin swap initiated successfully!'\n      });\n      onSwapCreated();\n    } catch (error) {\n      console.error('Error initiating swap:', error);\n      alert('Error initiating swap: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const initiateBtcToEthSwap = async () => {\n    try {\n      setLoading(true);\n\n      // Generate secret and swap ID\n      const {\n        secret,\n        hashedSecret\n      } = await generateSecret();\n      const swapId = generateSwapId();\n      const timelockTimestamp = Math.floor(Date.now() / 1000) + timelock * 3600;\n\n      // For Bitcoin to Ethereum, we need to create the Bitcoin script first\n      const response = await fetch('http://localhost:3001/api/swap/btc-to-eth/initiate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          swapId,\n          btcAmount,\n          ethAmount: ethers.parseEther(ethAmount).toString(),\n          ethAddress: ethAddress || account,\n          hashedSecret,\n          timelock: timelockTimestamp,\n          btcSenderPubKey: '02' + '0'.repeat(64),\n          // Placeholder - would get from user\n          btcRecipientPubKey: '03' + '0'.repeat(64) // Placeholder - would get from user\n        })\n      });\n      const result = await response.json();\n      setSwapResult({\n        swapId,\n        secret,\n        hashedSecret,\n        btcSwapAddress: result.data.btcSwapAddress,\n        message: 'Bitcoin to Ethereum swap initiated! Please fund the Bitcoin address.'\n      });\n      onSwapCreated();\n    } catch (error) {\n      console.error('Error initiating swap:', error);\n      alert('Error initiating swap: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!ethAmount || !btcAmount) {\n      alert('Please enter both ETH and BTC amounts');\n      return;\n    }\n    if (swapDirection === 'eth-to-btc') {\n      if (!btcAddress) {\n        alert('Please enter Bitcoin address');\n        return;\n      }\n      await initiateEthToBtcSwap();\n    } else {\n      await initiateBtcToEthSwap();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"swap-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Atomic Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swap-direction\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"eth-to-btc\",\n          checked: swapDirection === 'eth-to-btc',\n          onChange: e => setSwapDirection(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), \"Ethereum \\u2192 Bitcoin\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"btc-to-eth\",\n          checked: swapDirection === 'btc-to-eth',\n          onChange: e => setSwapDirection(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), \"Bitcoin \\u2192 Ethereum\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"swap-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ETH Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.001\",\n          value: ethAmount,\n          onChange: e => setEthAmount(e.target.value),\n          placeholder: \"0.1\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"BTC Amount (satoshis):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: btcAmount,\n          onChange: e => setBtcAmount(e.target.value),\n          placeholder: \"1000000\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), swapDirection === 'eth-to-btc' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bitcoin Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: btcAddress,\n          onChange: e => setBtcAddress(e.target.value),\n          placeholder: \"bc1q...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), swapDirection === 'btc-to-eth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ethereum Address (optional):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ethAddress,\n          onChange: e => setEthAddress(e.target.value),\n          placeholder: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Timelock (hours):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"168\",\n          value: timelock,\n          onChange: e => setTimelock(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-btn\",\n        children: loading ? 'Creating Swap...' : 'Create Atomic Swap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), swapResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swap-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Swap Created Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Swap ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 16\n          }, this), \" \", swapResult.swapId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Secret:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: swapResult.secret\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hashed Secret:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: swapResult.hashedSecret\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), swapResult.txHash && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Transaction Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 18\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: swapResult.txHash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), swapResult.btcSwapAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Bitcoin Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 18\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: swapResult.btcSwapAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: swapResult.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warning\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u26A0\\uFE0F Important:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), \" Save the secret securely! You'll need it to complete the swap.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(SwapInterface, \"0u/94rRHr3UaeWbhq13aqB2/68s=\");\n_c = SwapInterface;\nexport default SwapInterface;\nvar _c;\n$RefreshReg$(_c, \"SwapInterface\");","map":{"version":3,"names":["React","useState","ethers","AtomicSwapContract","jsxDEV","_jsxDEV","SwapInterface","signer","provider","account","onSwapCreated","_s","swapDirection","setSwapDirection","ethAmount","setEthAmount","btcAmount","setBtcAmount","btcAddress","setBtcAddress","ethAddress","setEthAddress","timelock","setTimelock","loading","setLoading","swapResult","setSwapResult","generateSwapId","hexlify","randomBytes","generateSecret","response","fetch","method","headers","data","json","error","console","initiateEthToBtcSwap","secret","hashedSecret","swapId","timelockTimestamp","Math","floor","Date","now","contract","Contract","address","abi","tx","initiateSwap","ZeroAddress","parseEther","value","wait","body","JSON","stringify","toString","result","txHash","hash","message","alert","initiateBtcToEthSwap","btcSenderPubKey","repeat","btcRecipientPubKey","btcSwapAddress","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","target","onSubmit","step","placeholder","required","min","max","disabled","_c","$RefreshReg$"],"sources":["/Users/yeknomhtooms/Desktop/trae_blockchain_app1/frontend/src/components/SwapInterface.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport AtomicSwapContract from '../contracts/AtomicSwap.json';\n\nconst SwapInterface = ({ signer, provider, account, onSwapCreated }) => {\n  const [swapDirection, setSwapDirection] = useState('eth-to-btc');\n  const [ethAmount, setEthAmount] = useState('');\n  const [btcAmount, setBtcAmount] = useState('');\n  const [btcAddress, setBtcAddress] = useState('');\n  const [ethAddress, setEthAddress] = useState('');\n  const [timelock, setTimelock] = useState(24); // hours\n  const [loading, setLoading] = useState(false);\n  const [swapResult, setSwapResult] = useState(null);\n\n  const generateSwapId = () => {\n    return ethers.hexlify(ethers.randomBytes(32));\n  };\n\n  const generateSecret = async () => {\n    try {\n      // Use direct URL to backend\n      const response = await fetch('http://localhost:3001/api/generate-secret', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n      });\n      const data = await response.json();\n      return data.data;\n    } catch (error) {\n      console.error('Error generating secret:', error);\n      throw error;\n    }\n  };\n\n  const initiateEthToBtcSwap = async () => {\n    try {\n      setLoading(true);\n      \n      // Generate secret and swap ID\n      const { secret, hashedSecret } = await generateSecret();\n      const swapId = generateSwapId();\n      const timelockTimestamp = Math.floor(Date.now() / 1000) + (timelock * 3600);\n\n      // Initialize contract\n      const contract = new ethers.Contract(\n        AtomicSwapContract.address,\n        AtomicSwapContract.abi,\n        signer\n      );\n\n      // Initiate swap on Ethereum\n      const tx = await contract.initiateSwap(\n        swapId,\n        account, // participant (will be updated with actual participant)\n        ethers.ZeroAddress, // ETH\n        ethers.parseEther(ethAmount),\n        hashedSecret,\n        timelockTimestamp,\n        { value: ethers.parseEther(ethAmount) }\n      );\n\n      await tx.wait();\n\n      // Register swap with backend - use direct URL\n      const response = await fetch('http://localhost:3001/api/swap/eth-to-btc/initiate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          swapId,\n          ethAmount: ethers.parseEther(ethAmount).toString(),\n          btcAmount,\n          btcAddress,\n          hashedSecret,\n          timelock: timelockTimestamp\n        })\n      });\n\n      const result = await response.json();\n      \n      setSwapResult({\n        swapId,\n        secret,\n        hashedSecret,\n        txHash: tx.hash,\n        message: 'Ethereum to Bitcoin swap initiated successfully!'\n      });\n\n      onSwapCreated();\n    } catch (error) {\n      console.error('Error initiating swap:', error);\n      alert('Error initiating swap: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initiateBtcToEthSwap = async () => {\n    try {\n      setLoading(true);\n      \n      // Generate secret and swap ID\n      const { secret, hashedSecret } = await generateSecret();\n      const swapId = generateSwapId();\n      const timelockTimestamp = Math.floor(Date.now() / 1000) + (timelock * 3600);\n\n      // For Bitcoin to Ethereum, we need to create the Bitcoin script first\n      const response = await fetch('http://localhost:3001/api/swap/btc-to-eth/initiate', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          swapId,\n          btcAmount,\n          ethAmount: ethers.parseEther(ethAmount).toString(),\n          ethAddress: ethAddress || account,\n          hashedSecret,\n          timelock: timelockTimestamp,\n          btcSenderPubKey: '02' + '0'.repeat(64), // Placeholder - would get from user\n          btcRecipientPubKey: '03' + '0'.repeat(64) // Placeholder - would get from user\n        })\n      });\n\n      const result = await response.json();\n      \n      setSwapResult({\n        swapId,\n        secret,\n        hashedSecret,\n        btcSwapAddress: result.data.btcSwapAddress,\n        message: 'Bitcoin to Ethereum swap initiated! Please fund the Bitcoin address.'\n      });\n\n      onSwapCreated();\n    } catch (error) {\n      console.error('Error initiating swap:', error);\n      alert('Error initiating swap: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!ethAmount || !btcAmount) {\n      alert('Please enter both ETH and BTC amounts');\n      return;\n    }\n\n    if (swapDirection === 'eth-to-btc') {\n      if (!btcAddress) {\n        alert('Please enter Bitcoin address');\n        return;\n      }\n      await initiateEthToBtcSwap();\n    } else {\n      await initiateBtcToEthSwap();\n    }\n  };\n\n  return (\n    <div className=\"swap-interface\">\n      <h2>Create New Atomic Swap</h2>\n      \n      <div className=\"swap-direction\">\n        <label>\n          <input\n            type=\"radio\"\n            value=\"eth-to-btc\"\n            checked={swapDirection === 'eth-to-btc'}\n            onChange={(e) => setSwapDirection(e.target.value)}\n          />\n          Ethereum → Bitcoin\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"btc-to-eth\"\n            checked={swapDirection === 'btc-to-eth'}\n            onChange={(e) => setSwapDirection(e.target.value)}\n          />\n          Bitcoin → Ethereum\n        </label>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"swap-form\">\n        <div className=\"form-group\">\n          <label>ETH Amount:</label>\n          <input\n            type=\"number\"\n            step=\"0.001\"\n            value={ethAmount}\n            onChange={(e) => setEthAmount(e.target.value)}\n            placeholder=\"0.1\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>BTC Amount (satoshis):</label>\n          <input\n            type=\"number\"\n            value={btcAmount}\n            onChange={(e) => setBtcAmount(e.target.value)}\n            placeholder=\"1000000\"\n            required\n          />\n        </div>\n\n        {swapDirection === 'eth-to-btc' && (\n          <div className=\"form-group\">\n            <label>Bitcoin Address:</label>\n            <input\n              type=\"text\"\n              value={btcAddress}\n              onChange={(e) => setBtcAddress(e.target.value)}\n              placeholder=\"bc1q...\"\n              required\n            />\n          </div>\n        )}\n\n        {swapDirection === 'btc-to-eth' && (\n          <div className=\"form-group\">\n            <label>Ethereum Address (optional):</label>\n            <input\n              type=\"text\"\n              value={ethAddress}\n              onChange={(e) => setEthAddress(e.target.value)}\n              placeholder={account}\n            />\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label>Timelock (hours):</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"168\"\n            value={timelock}\n            onChange={(e) => setTimelock(e.target.value)}\n            required\n          />\n        </div>\n\n        <button type=\"submit\" disabled={loading} className=\"submit-btn\">\n          {loading ? 'Creating Swap...' : 'Create Atomic Swap'}\n        </button>\n      </form>\n\n      {swapResult && (\n        <div className=\"swap-result\">\n          <h3>Swap Created Successfully!</h3>\n          <div className=\"result-details\">\n            <p><strong>Swap ID:</strong> {swapResult.swapId}</p>\n            <p><strong>Secret:</strong> <code>{swapResult.secret}</code></p>\n            <p><strong>Hashed Secret:</strong> <code>{swapResult.hashedSecret}</code></p>\n            {swapResult.txHash && (\n              <p><strong>Transaction Hash:</strong> <code>{swapResult.txHash}</code></p>\n            )}\n            {swapResult.btcSwapAddress && (\n              <p><strong>Bitcoin Address:</strong> <code>{swapResult.btcSwapAddress}</code></p>\n            )}\n            <p className=\"message\">{swapResult.message}</p>\n          </div>\n          <div className=\"warning\">\n            <strong>⚠️ Important:</strong> Save the secret securely! You'll need it to complete the swap.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SwapInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}